/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Client;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class RoomListFrm extends javax.swing.JFrame {
    private Vector<String> listRoom;
    private Vector<String> listPassword;
    private Thread thread;
    private boolean isPlayThread;
    private boolean isFiltered;
    DefaultTableModel defaultTableModel;
    /**
     * Creates new form RoomListFrm
     */
    public RoomListFrm() {
        initComponents();
        this.setTitle("Caro Game");
        this.setIconImage(new ImageIcon("assets/image/caroicon.png").getImage());
        this.setResizable(false);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
        defaultTableModel = (DefaultTableModel) jTableListRoom.getModel();
        isPlayThread = true;
        isFiltered = false;     //
        thread = new Thread(){
            @Override
            public void run(){
                while (Client.roomListFrm.isDisplayable()&&isPlayThread&&!isFiltered) {                    
                    try {
                        Client.socketHandle.write("view-room-list,");
                        Thread.sleep(500);
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                    } catch (InterruptedException ex) {
                        JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                    }
                }
            }
        };
        thread.start();
    }
    public void updateRoomList(Vector<String> listData, Vector<String> listPassword){
        this.listRoom = listData;
        this.listPassword = listPassword;
        defaultTableModel.setRowCount(0);
        ImageIcon imageIcon;
        for(int i=0; i<listRoom.size(); i++){
            if(listPassword.get(i).equals(" "))
                imageIcon = new ImageIcon("assets/icon/đấu_online.PNG");
            else
                imageIcon = new ImageIcon("assets/icon/room_lock.PNG");
            defaultTableModel.addRow(new Object[]{
                listRoom.get(i),
                imageIcon
            });
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlblTitle = new javax.swing.JLabel();
        btnTroVe = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Object[][] rows = {
        };
        String[] columns = {"Tên phòng",""};
        DefaultTableModel model = new DefaultTableModel(rows, columns){
            @Override
            public Class<?> getColumnClass(int column){
                switch(column){
                    case 0: return String.class;
                    case 1: return ImageIcon.class;
                    default: return Object.class;
                }
            }
        };
        jTableListRoom = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(15, 20, 155));

        jlblTitle.setBackground(new java.awt.Color(255, 255, 255));
        jlblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlblTitle.setForeground(new java.awt.Color(255, 255, 255));
        jlblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblTitle.setText("Danh sách phòng trống");

        btnTroVe.setText("X");
        btnTroVe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTroVeActionPerformed(evt);
            }
        });

        jTableListRoom.setBackground(new java.awt.Color(220, 240, 255));
        jTableListRoom.setFont(new java.awt.Font("Tekton Pro", 1, 36)); // NOI18N
        jTableListRoom.setModel(model);
        jTableListRoom.setFillsViewportHeight(true);
        jTableListRoom.setRowHeight(60);
        jTableListRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListRoomMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableListRoom);
        if (jTableListRoom.getColumnModel().getColumnCount() > 0) {
            jTableListRoom.getColumnModel().getColumn(0).setMinWidth(240);
            jTableListRoom.getColumnModel().getColumn(0).setPreferredWidth(240);
            jTableListRoom.getColumnModel().getColumn(0).setMaxWidth(240);
            jTableListRoom.getColumnModel().getColumn(1).setMinWidth(120);
            jTableListRoom.getColumnModel().getColumn(1).setPreferredWidth(120);
            jTableListRoom.getColumnModel().getColumn(1).setMaxWidth(120);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnTroVe))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnTroVe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(374, 509));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnTroVeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTroVeActionPerformed
        Client.closeView(Client.View.ROOMLIST);
//        Client.openView(Client.View.HOMEPAGE);
    }//GEN-LAST:event_btnTroVeActionPerformed

    private void jTableListRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListRoomMouseClicked
        if(jTableListRoom.getSelectedRow()==-1){      
        }else{
            try {
                isPlayThread = false;
                int index = jTableListRoom.getSelectedRow();
                int room = Integer.parseInt(listRoom.get(index).split(" ")[1]);   //
                String password = listPassword.get(index);
                if(password.equals(" ")){
                    Client.socketHandle.write("join-room,"+room);
                    Client.closeView(Client.View.ROOMLIST);
                }
                else{
                    Client.closeView(Client.View.ROOMLIST);
                    Client.openView(Client.View.JOINROOMPASSWORD, room, password);
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jTableListRoomMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTroVe;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableListRoom;
    private javax.swing.JLabel jlblTitle;
    // End of variables declaration//GEN-END:variables
}
